class Object
  def >> _
    _.send *self
  end
end

$__ =  $$ /   $$ #  1
_   = $__ +  $__ #  2
__  = $__ +    _ #  3
$_  =   _ +    _ #  4
@_  = $__ +   $_ #  5
$-_ =   _ **  @_ # 32
$___=   _ *  $-_ # 64
@__ = $-_ + $___ # 96

OBJECT = ('ancestors' >> ('class' >> []))[2]
HASH = ['const_get', 'Hash'] >> OBJECT

['require', 'sinatra'] >> OBJECT
['require', 'json'] >> OBJECT
['require', 'church'] >> OBJECT

# ['get', '/', &-> { ['haml', 'to_sym' >> 'index'] >> self }] >> self
self.send('get', '/', &-> { ['haml', 'to_sym' >> 'index'] >> self })

post '/generate' do
  OUTPUT = <<_
$__ =  $$ /   $$ #  1
_   = $__ +  $__ #  2
__  = $__ +    _ #  3
$_  =   _ +    _ #  4
@_  = $__ +   $_ #  5
$-_ =   _ **  @_ # 32
$___=   _ *  $-_ # 64
@__ = $-_ + $___ # 96

$> << ('' <<
_

  VARS = {'96'=>'@__', '64'=>'$___', '32'=>'$-_', '5'=>'@_', '4'=>'$_', '3'=>'__', '2'=>'_', '1'=>'$__'}
  EXPRS = ["$__ - $__", "$__", "_", "__", "$_", "@_", "_ * __", "_ * __ + $__", "_ * $_", "__ * __", "_ * @_", "_ * @_ + $__", "__ * $_", "__ * $_ + $__", "_ * (_ + @_)", "__ * @_", "$_ * $_", "$_ * $_ + $__", "_ * __ * __", "_ * __ * __ + $__", "_ * _ * @_", "__ * (_ + @_)", "$-_ - _ * @_", "$-_ - __ * __", "$-_ - _ * $_", "@_ * @_", "@_ * @_ + $__", "$-_ - @_", "$-_ - $_", "$-_ - __", "$-_ - _", "$-_ - $__", "$-_", "$-_ + $__", "$-_ + _", "$-_ + __", "$-_ + $_", "$-_ + @_", "$-_ + _ * __", "$-_ + _ * __ + $__", "$-_ + _ * $_", "$-_ + __ * __", "$-_ + _ * @_", "$-_ + _ * @_ + $__", "$-_ + __ * $_", "$-_ + __ * $_ + $__", "$-_ + _ * (_ + @_)", "$-_ + __ * @_", "$-_ + $_ * $_", "$-_ + $_ * $_ + $__", "$-_ + _ * __ * __", "$-_ + _ * __ * __ + $__", "$-_ + _ * _ * @_", "$-_ + __ * (_ + @_)", "$-_ + ($-_ - _ * @_)", "$-_ + ($-_ - __ * __)", "$-_ + ($-_ - _ * $_)", "$-_ + @_ * @_", "$-_ + @_ * @_ + $__", "$___ - @_", "$___ - $_", "$___ - __", "$___ - _", "$___ - $__", "$___", "$___ + $__", "$___ + _", "$___ + __", "$___ + $_", "$___ + @_", "$___ + _ * __", "$___ + _ * __ + $__", "$___ + _ * $_", "$___ + __ * __", "$___ + _ * @_", "$___ + _ * @_ + $__", "$___ + __ * $_", "$___ + __ * $_ + $__", "$___ + _ * (_ + @_)", "$___ + __ * @_", "$___ + $_ * $_", "$___ + $_ * $_ + $__", "$___ + _ * __ * __", "$___ + _ * __ * __ + $__", "$___ + _ * _ * @_", "$___ + __ * (_ + @_)", "$___ + ($-_ - _ * @_)", "$___ + ($-_ - __ * __)", "$___ + ($-_ - _ * $_)", "$___ + @_ * @_", "$___ + @_ * @_ + $__", "@__ - @_", "@__ - $_", "@__ - __", "@__ - _", "@__ - $__", "@__", "@__ + $__", "@__ + _", "@__ + __", "@__ + $_", "@__ + @_", "@__ + _ * __", "@__ + _ * __ + $__", "@__ + _ * $_", "@__ + __ * __", "@__ + _ * @_", "@__ + _ * @_ + $__", "@__ + __ * $_", "@__ + __ * $_ + $__", "@__ + _ * (_ + @_)", "@__ + __ * @_", "@__ + $_ * $_", "@__ + $_ * $_ + $__", "@__ + _ * __ * __", "@__ + _ * __ * __ + $__", "@__ + _ * _ * @_", "@__ + __ * (_ + @_)", "@__ + ($-_ - _ * @_)", "@__ + ($-_ - __ * __)", "@__ + ($-_ - _ * $_)", "@__ + @_ * @_", "@__ + @_ * @_ + $__", "@__ + @_ * @_ + _", "@__ + $-_ - $_", "@__ + $-_ - __", "@__ + $-_ - _", "@__ + $-_ - $__"]
  
  ORDS  = ('params' >> self)['to_sym' >> 'msg'].chars.map(&:ord)

  ORDS.each do |ord|
    OUTPUT << '  %-27s' % (EXPRS[ord] + ' <<') + "# #{ord.chr.inspect}\n"
  end

  OUTPUT << "  _ * @_)\n"

  SMOOSH = OUTPUT.gsub(/#\s+\d+/, ';').gsub(/#.+/, '').gsub(/\s+/, '')

  ['content_type', 'application/json'] >> self
  'to_json' >> {'output' => OUTPUT, 'smoosh' => SMOOSH}
end
